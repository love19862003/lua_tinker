CMAKE_MINIMUM_REQUIRED(VERSION 2.8)


IF(UNIX)
  SET(CMAKE_C_COMPILER gcc)
  SET(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -fexceptions -Wno-unused-local-typedefs -ffunction-sections -fdata-sections")
  SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++11 -fexceptions")
  SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wno-unused-local-typedefs -Wreorder -ffunction-sections -fdata-sections")
  SET(CMAKE_CXX_FLAGS_DEBUG "-D_DEBUG -O0 -Wall")
  SET(CMAKE_CXX_FLAGS_RELEASE "-DNDEBUG -Os -Wall")
  
ELSE(UNIX)
  SET(CMAKE_CONFIGURATION_TYPES "Debug;Release" )
  SET(CMAKE_C_COMPILER msvc)
  SET(CMAKE_CXX_COMPILER msvc)
  SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} /W3 /MP  /bigobj /wd4496 /wd4267 /wd4244 /Zi")
  SET(CMAKE_CXX_FLAGS_DEBUG "-DDEBUG /MTd")
  SET(CMAKE_CXX_FLAGS_RELEASE "-DNDEBUG /MT /DEBUG:FASTLINK")
  SET(CMAKE_C_FLAGS_DEBUG "-DDEBUG /MTd")
  SET(CMAKE_C_FLAGS_RELEASE "-DNDEBUG /MT /DEBUG:FASTLINK")

  ADD_DEFINiTIONS(-D_CRT_SECURE_NO_WARNINGS -D_SCL_SECURE_NO_WARNINGS -D_CRT_SECURE_NO_DEPRECATE -D_CRT_NONSTDC_NO_DEPRECATE)
  ADD_DEFINiTIONS(-DLUA_COMPAT_APIINTCASTS -D_LIB)
  ADD_DEFINITIONS(-DWIN32 -DWINDOWS)
ENDIF(UNIX)

SET(LIBRARY_OUTPUT_PATH "${CMAKE_SOURCE_DIR}/lib/${CMAKE_BUILD_TYPE}/")
INCLUDE_DIRECTORIES("${CMAKE_SOURCE_DIR}")
INCLUDE_DIRECTORIES("${CMAKE_SOURCE_DIR}/lua-5.3.1/src")


AUX_SOURCE_DIRECTORY(./cjson SOURCE_TINKER_JSON)
AUX_SOURCE_DIRECTORY(./lua-5.3.1/src SOURCE_TINKER_LUA)

FILE(GLOB SOURCE_TINKER  ./*.h ./*.cpp)
FILE(GLOB_RECURSE JSON_HEADERS  ./cjson/*.h ./cjson/*.hpp)
FILE(GLOB_RECURSE LUA_HEADERS  ./lua-5.3.1/src/*.h ./lua-5.3.1/src/*.hpp)

SOURCE_GROUP("lua" FILES ${SOURCE_TINKER_LUA} ${LUA_HEADERS})
SOURCE_GROUP("cjson" FILES ${SOURCE_TINKER_JSON} ${JSON_HEADERS})
SOURCE_GROUP("tinker" FILES ${SOURCE_TINKER} )

ADD_LIBRARY(luatinker STATIC ${SOURCE_TINKER} ${SOURCE_TINKER_JSON} ${SOURCE_TINKER_LUA} ${LUA_HEADERS}  ${JSON_HEADERS})